import discord
from _typeshed import Incomplete
from discord.ext import commands as commands
from src.utils import MoneySelector as MoneySelector, bank as bank, game_template as game_template, uis as uis

class Dictionary:
    prompt: str
    possible_words: list[str]
    @property
    def get_possibles_words(self) -> int: ...
    @classmethod
    async def create(cls, prompt_length: int) -> None: ...
    def __init__(self, prompt, possible_words) -> None: ...

class Bomb_Party(game_template.Template):
    modName: str
    bot: Incomplete
    betting_value: int
    dictionary: Incomplete
    interaction: Incomplete
    account: Incomplete
    multiplier: int
    def __init__(self, bot: commands.Bot) -> None: ...
    async def money_callback(self, value: int, user) -> None: ...
    async def easy(self, interaction: discord.Interaction, value: str): ...
    async def normal(self, interaction: discord.Interaction, value: str): ...
    async def hard(self, interaction: discord.Interaction, value: str): ...
    async def impossible(self, interaction: discord.Interaction, value: str): ...
    async def difficulty_selector(self) -> None: ...
    async def start(self, interaction: discord.Interaction) -> None: ...

def game_setup(bot: commands.Bot) -> Bomb_Party: ...
