import discord
import typing
from .utils import bank as bank
from _typeshed import Incomplete
from discord.ext import commands

class Accounting(commands.Cog):
    bot: Incomplete
    def __init__(self, bot: commands.Bot) -> None: ...
    async def add_non_existing_users(self) -> None: ...
    @property
    def display_emoji(self) -> typing.Union[str, bytes, discord.PartialEmoji]: ...
    async def account(self, ctx: commands.Context) -> None: ...
    async def info(self, ctx: commands.Context, member: discord.User = ...): ...
    async def daily(self, ctx: commands.Context): ...
    async def daily_error(self, ctx: commands.Context, error): ...
    async def pay_debt(self, ctx: commands.Context, pay: int = ...): ...
    async def pay_debt_error(self, ctx: commands.Context, error): ...
    async def borrow_money(self, ctx: commands.Context, amount: int = ...): ...
    async def borrow_money_error(self, ctx: commands.Context, error): ...

async def setup(bot: commands.Bot) -> None: ...
